# 1. Create a workflow that includes steps with conditional keywords. For example, run a step only if the previous step succeeded or only if the current branch is main.
# 2. Create a workflow that includes a step with workflow commands to set environment variables, create output parameters, and write to logs.
# 3. Create a workflow that demonstrates the use of dependent jobs. For example, create a workflow with three jobs: build, test, and deploy. The test job should depend
# on the build job, and the deploy job should depend on the test job.
# 4. Create a workflow that triggers on the check_suite event. The workflow should run a series of tests, and if any test fails,
# it should open an issue in the repository with the details of the failure.

name: Conditional & Multi-Level Variable Reference Workflow

on:
  workflow_dispatch:
    inputs:
      code:
        description: Code to run the workflow.
        type: number
        required: true

env:
  workflow-level: "Workflow Level Value"

jobs:
  conditional-check:
    name: Condition Check Job
    runs-on: ubuntu-latest
    env:
      secret_code: ${{ secrets.CODE }}
      job-level: "Job Level Value"

    steps:
      - name: Passed the check
        id: pass
        run: |
          if [[ "${{ inputs.code }}" == "${{ env.secret_code }}" ]]; then
              echo "result=passed" >> $GITHUB_ENV
              echo 'The user has passed the check'
          else
              echo "result=failed" >> $GITHUB_OUTPUT
          fi

      - name: Failed the check
        if: env.result == 'failed'
        run: echo 'The user has failed the check'

  multi-level-var-job:
    name: Multi-Level Variable Reference Job
    runs-on: ubuntu-latest

    env:
      job-level: "Job Level Value"

    outputs:
      job-level: ${{ steps.multi-echo.outputs.job-level }}

    steps:
      - name: Echo Multi-Level ENV Variables
        id: multi-echo
        env:
          step-level: "Step Level Value"
        if: env.workflow-level == 'Workflow Level Value'
        run: |
          echo 'Workflow - ${{ env.workflow-level }}'
          echo 'Job - ${{ env.job-level }}'
          echo 'job-level=Updated Job Value >> $GITHUB_OUTPUT'
          echo 'Step - ${{ env.step-level }}'

  variables-job:
    name: Playing with ENV, O/P, I/P Variables
    runs-on: ubuntu-latest

    env:
      job-level: ${{ needs.multi-level-var-job.outputs.job-level }}

    steps:
      - name: Echo Multi-Level ENV Variables
        env:
          step-level: "Step Level Value"
        run: |
          echo 'Workflow - ${{ env.workflow-level }}'
          echo 'Job - ${{ env.job-level }}'
          echo 'Step - ${{ env.step-level }}'
          echo 'The code user entered - ${{ inputs.code }}'
